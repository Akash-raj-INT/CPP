#include <iostream>
#include <cmath>

class ArmstrongChecker {
public:
    virtual bool isArmstrong(int number) = 0;
};

class ArmstrongCheckerImpl : public ArmstrongChecker {
public:
    bool isArmstrong(int number) override {
        int originalNumber = number;
        int n = 0;
        int sum = 0;

        // Calculate the number of digits in the given number
        while (originalNumber != 0) {
            originalNumber /= 10;
            n++;
        }

        originalNumber = number;

        // Calculate the sum of the nth powers of its digits
        while (originalNumber != 0) {
            int digit = originalNumber % 10;
            sum += pow(digit, n);
            originalNumber /= 10;
        }

        // Check if it's an Armstrong number
        return sum == number;
    }
};

int main() {
    int number;
    std::cin >> number;

    ArmstrongCheckerImpl armstrongChecker;
    if (armstrongChecker.isArmstrong(number)) {
        std::cout << number << " is an Armstrong number." << std::endl;
    } else {
        std::cout << number << " is not an Armstrong number." << std::endl;
    }

    return 0;
}
